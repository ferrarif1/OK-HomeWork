{
	"id": "decdc80f291fa0a60a2330ae767b082f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Code-hardhat-ethersJs/contracts/sc.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\n\n\ncontract Attack {\n   address router = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n \n   constructor() payable {\n\n   }\n \n   receive() external payable {}\n    \n   function attack(address registerAddress) public payable {\n       address payable addr = payable(address(registerAddress));\n       selfdestruct(addr);\n   }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Code-hardhat-ethersJs/contracts/sc.sol": {
				"Attack": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "registerAddress",
									"type": "address"
								}
							],
							"name": "attack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":67:383  contract Attack {... */\n  mstore(0x40, 0x80)\n    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":105:147  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x10ed43c718714eb63d5aa57b78b54704e256024e\n    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":88:147  address router = 0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Code-hardhat-ethersJs/contracts/sc.sol\":67:383  contract Attack {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":67:383  contract Attack {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd018db3e\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":227:381  function attack(address registerAddress) public payable {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n    tag_9:\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":292:312  address payable addr */\n      0x00\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":331:346  registerAddress */\n      dup2\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":292:348  address payable addr = payable(address(registerAddress)) */\n      swap1\n      pop\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":370:374  addr */\n      dup1\n        /* \"Code-hardhat-ethersJs/contracts/sc.sol\":357:375  selfdestruct(addr) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"#utility.yul\":7:146   */\n    tag_12:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_14\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_8:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_17\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":228:347   */\n    tag_17:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_20\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_12\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:664   */\n    tag_23:\n        /* \"#utility.yul\":605:612   */\n      0x00\n        /* \"#utility.yul\":634:658   */\n      tag_25\n        /* \"#utility.yul\":652:657   */\n      dup3\n        /* \"#utility.yul\":634:658   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":623:658   */\n      swap1\n      pop\n        /* \"#utility.yul\":568:664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":670:796   */\n    tag_26:\n        /* \"#utility.yul\":707:714   */\n      0x00\n        /* \"#utility.yul\":747:789   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":740:745   */\n      dup3\n        /* \"#utility.yul\":736:790   */\n      and\n        /* \"#utility.yul\":725:790   */\n      swap1\n      pop\n        /* \"#utility.yul\":670:796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1042   */\n    tag_19:\n        /* \"#utility.yul\":1034:1035   */\n      0x00\n        /* \"#utility.yul\":1031:1032   */\n      dup1\n        /* \"#utility.yul\":1024:1036   */\n      revert\n        /* \"#utility.yul\":1048:1170   */\n    tag_15:\n        /* \"#utility.yul\":1121:1145   */\n      tag_32\n        /* \"#utility.yul\":1139:1144   */\n      dup2\n        /* \"#utility.yul\":1121:1145   */\n      tag_23\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":1114:1119   */\n      dup2\n        /* \"#utility.yul\":1111:1146   */\n      eq\n        /* \"#utility.yul\":1101:1164   */\n      tag_33\n      jumpi\n        /* \"#utility.yul\":1160:1161   */\n      0x00\n        /* \"#utility.yul\":1157:1158   */\n      dup1\n        /* \"#utility.yul\":1150:1162   */\n      revert\n        /* \"#utility.yul\":1101:1164   */\n    tag_33:\n        /* \"#utility.yul\":1048:1170   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eb5393233eff49a707128851136d5f031efc43408710390116b0d64b696cd32464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_8": {
									"entryPoint": null,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527310ed43c718714eb63d5aa57b78b54704e256024e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061011a806100676000396000f3fe608060405260043610601f5760003560e01c8063d018db3e14602a576025565b36602557005b600080fd5b60406004803603810190603c91906073565b6042565b005b60008190508073ffffffffffffffffffffffffffffffffffffffff16ff5b600081359050606d8160d0565b92915050565b600060208284031215608657608560cb565b5b60006092848285016060565b91505092915050565b600060a48260ab565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b60d781609b565b811460e157600080fd5b5056fea2646970667358221220eb5393233eff49a707128851136d5f031efc43408710390116b0d64b696cd32464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x11A DUP1 PUSH2 0x67 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD018DB3E EQ PUSH1 0x2A JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x3C SWAP2 SWAP1 PUSH1 0x73 JUMP JUMPDEST PUSH1 0x42 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0x6D DUP2 PUSH1 0xD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x86 JUMPI PUSH1 0x85 PUSH1 0xCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x92 DUP5 DUP3 DUP6 ADD PUSH1 0x60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA4 DUP3 PUSH1 0xAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD7 DUP2 PUSH1 0x9B JUMP JUMPDEST DUP2 EQ PUSH1 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB MSTORE8 SWAP4 0x23 RETURNDATACOPY SELFDESTRUCT 0x49 0xA7 SMOD SLT DUP9 MLOAD SGT PUSH14 0x5F031EFC43408710390116B0D64B PUSH10 0x6CD32464736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "67:316:0:-:0;;;105:42;88:59;;;;;;;;;;;;;;;;;;;;67:316;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@attack_32": {
									"entryPoint": 66,
									"id": 32,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1173:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "527:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "537:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "547:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "547:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "520:6:1",
														"type": ""
													}
												],
												"src": "487:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "613:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "623:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "652:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "634:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "634:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "605:7:1",
														"type": ""
													}
												],
												"src": "568:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "725:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "747:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "736:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "725:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "697:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "707:7:1",
														"type": ""
													}
												],
												"src": "670:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "891:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "908:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "911:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "901:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "901:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "802:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1014:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1031:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1034:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1024:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1024:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "925:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1091:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1148:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1157:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1160:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1150:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1150:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1150:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1114:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1139:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1121:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1111:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1111:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:43:1"
															},
															"nodeType": "YulIf",
															"src": "1101:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1084:5:1",
														"type": ""
													}
												],
												"src": "1048:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601f5760003560e01c8063d018db3e14602a576025565b36602557005b600080fd5b60406004803603810190603c91906073565b6042565b005b60008190508073ffffffffffffffffffffffffffffffffffffffff16ff5b600081359050606d8160d0565b92915050565b600060208284031215608657608560cb565b5b60006092848285016060565b91505092915050565b600060a48260ab565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b60d781609b565b811460e157600080fd5b5056fea2646970667358221220eb5393233eff49a707128851136d5f031efc43408710390116b0d64b696cd32464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD018DB3E EQ PUSH1 0x2A JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x3C SWAP2 SWAP1 PUSH1 0x73 JUMP JUMPDEST PUSH1 0x42 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0x6D DUP2 PUSH1 0xD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x86 JUMPI PUSH1 0x85 PUSH1 0xCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x92 DUP5 DUP3 DUP6 ADD PUSH1 0x60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA4 DUP3 PUSH1 0xAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD7 DUP2 PUSH1 0x9B JUMP JUMPDEST DUP2 EQ PUSH1 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB MSTORE8 SWAP4 0x23 RETURNDATACOPY SELFDESTRUCT 0x49 0xA7 SMOD SLT DUP9 MLOAD SGT PUSH14 0x5F031EFC43408710390116B0D64B PUSH10 0x6CD32464736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "67:316:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;227:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;292:20;331:15;292:56;;370:4;357:18;;;7:139:1;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;568:96::-;605:7;634:24;652:5;634:24;:::i;:::-;623:35;;568:96;;;:::o;670:126::-;707:7;747:42;740:5;736:54;725:65;;670:126;;;:::o;925:117::-;1034:1;1031;1024:12;1048:122;1121:24;1139:5;1121:24;:::i;:::-;1114:5;1111:35;1101:63;;1160:1;1157;1150:12;1101:63;1048:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "56400",
								"executionCost": "24348",
								"totalCost": "80748"
							},
							"external": {
								"attack(address)": "28018"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 67,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 67,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 105,
									"end": 147,
									"name": "PUSH",
									"source": 0,
									"value": "10ED43C718714EB63D5AA57B78B54704E256024E"
								},
								{
									"begin": 88,
									"end": 147,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 147,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 88,
									"end": 147,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 88,
									"end": 147,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 88,
									"end": 147,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 88,
									"end": 147,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67,
									"end": 383,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67,
									"end": 383,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 383,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 67,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 383,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb5393233eff49a707128851136d5f031efc43408710390116b0d64b696cd32464736f6c63430008070033",
									".code": [
										{
											"begin": 67,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "D018DB3E"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 383,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 227,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 227,
											"end": 381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 227,
											"end": 381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 227,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 227,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 227,
											"end": 381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 227,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 227,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 227,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 227,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 292,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 292,
											"end": 348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 357,
											"end": 375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 357,
											"end": 375,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 664,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 568,
											"end": 664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 634,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 634,
											"end": 658,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 658,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 634,
											"end": 658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 623,
											"end": 658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 623,
											"end": 658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 568,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 568,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 664,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 670,
											"end": 796,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 670,
											"end": 796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 707,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 736,
											"end": 790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 725,
											"end": 790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 670,
											"end": 796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 670,
											"end": 796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 670,
											"end": 796,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1042,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 925,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1048,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1111,
											"end": 1146,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack(address)": "d018db3e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registerAddress\",\"type\":\"address\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Code-hardhat-ethersJs/contracts/sc.sol\":\"Attack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Code-hardhat-ethersJs/contracts/sc.sol\":{\"keccak256\":\"0x077d5a68c5e21d51c2a3fa93efd6afc431c2ff278f8a581982ea77349522733c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5545bc3d6850d93e00a67f489c784ff9132f607b36427c8d605ecc69656e1d6\",\"dweb:/ipfs/QmRPB6TsgPjPkfwCp8k7VH2NDgewwAQzfAMYqLa27YCQmY\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Code-hardhat-ethersJs/contracts/sc.sol": {
				"ast": {
					"absolutePath": "Code-hardhat-ethersJs/contracts/sc.sol",
					"exportedSymbols": {
						"Attack": [
							33
						]
					},
					"id": 34,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 33,
							"linearizedBaseContracts": [
								33
							],
							"name": "Attack",
							"nameLocation": "76:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "96:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "88:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "88:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "105:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 7,
										"nodeType": "Block",
										"src": "176:7:0",
										"statements": []
									},
									"id": 8,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "165:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "176:0:0"
									},
									"scope": 33,
									"src": "154:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "216:2:0",
										"statements": []
									},
									"id": 12,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "216:0:0"
									},
									"scope": 33,
									"src": "189:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "283:98:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "addr",
														"nameLocation": "308:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 31,
														"src": "292:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "292:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 26,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 23,
																	"name": "registerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "331:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "323:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 21,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "323:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "323:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "315:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 19,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "315:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "315:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "292:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 28,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "370:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 27,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "357:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "357:18:0"
											}
										]
									},
									"functionSelector": "d018db3e",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nameLocation": "236:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "registerAddress",
												"nameLocation": "251:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "243:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:25:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "283:0:0"
									},
									"scope": 33,
									"src": "227:154:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 34,
							"src": "67:316:0",
							"usedErrors": []
						}
					],
					"src": "32:351:0"
				},
				"id": 0
			}
		}
	}
}