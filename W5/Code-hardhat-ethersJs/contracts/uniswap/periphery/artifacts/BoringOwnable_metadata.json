{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "claimOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pendingOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "direct",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "renounce",
						"type": "bool"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"transferOwnership(address,bool,bool)": {
					"params": {
						"direct": "True if `newOwner` should be set immediately. False if `newOwner` needs to use `claimOwnership`.",
						"newOwner": "Address of the new owner.",
						"renounce": "Allows the `newOwner` to be `address(0)` if `direct` and `renounce` is True. Has no effect otherwise."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"claimOwnership()": {
					"notice": "Needs to be called by `pendingOwner` to claim ownership."
				},
				"constructor": "`owner` defaults to msg.sender on construction.",
				"transferOwnership(address,bool,bool)": {
					"notice": "Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner. Can only be invoked by the current `owner`."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Code-hardhat-ethersJs/contracts/uniswap/periphery/MasterChefV2.sol": "BoringOwnable"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Code-hardhat-ethersJs/contracts/uniswap/periphery/MasterChefV2.sol": {
			"keccak256": "0xfb0853d3d778e2975dc141d1c6c3a8a2df2918774e8fcb1af8f20e9b818a6381",
			"license": "MIT",
			"urls": [
				"bzz-raw://7eb49348a577357629fd3d93ff19cbf3751bec88848dac0f5916f80a3816191d",
				"dweb:/ipfs/QmdHs65KJaJP7Ph4ihVxrwgxxjRVwj7v75CWMkvkq5qYDU"
			]
		}
	},
	"version": 1
}