{
	"compiler": {
		"version": "0.8.10+commit.fc410830"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IPoolAddressesProvider",
						"name": "_address",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "ADDRESSES_PROVIDER",
				"outputs": [
					{
						"internalType": "contract IPoolAddressesProvider",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "POOL",
				"outputs": [
					{
						"internalType": "contract IPool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "premium",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "initiator",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "params",
						"type": "bytes"
					}
				],
				"name": "executeOperation",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "startFlashLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"executeOperation(address,uint256,uint256,address,bytes)": {
					"details": "Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount",
					"params": {
						"amount": "The amount of the flash-borrowed asset",
						"asset": "The address of the flash-borrowed asset",
						"initiator": "The address of the flashloan initiator",
						"params": "The byte-encoded params passed when initiating the flashloan",
						"premium": "The fee of the flash-borrowed asset"
					},
					"returns": {
						"_0": "True if the execution of the operation succeeds, false otherwise"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"executeOperation(address,uint256,uint256,address,bytes)": {
					"notice": "Executes an operation after receiving the flash-borrowed asset"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts2/V3FlashLoan.sol": "V3FlashLoan"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
			"license": "MIT",
			"urls": [
				"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
				"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts2/V3FlashLoan.sol": {
			"keccak256": "0xa1765d531aa18f875a6ba2180f44244943c67093141f0fa03204d420395aa576",
			"license": "MIT",
			"urls": [
				"bzz-raw://76540dea793368bc54e2290ca114f78e63086b9bc38488a41e7caec15ae52556",
				"dweb:/ipfs/QmTDjpmL9uhbGAtpthuVDf5EbyJZiPUX8Pq9GLvKH6fSde"
			]
		},
		"contracts2/flashloan-lib/FlashLoanSimpleReceiverBase.sol": {
			"keccak256": "0x9c4d1cf4f10d6eb05c6f74b2e6ef021fb94ee0b648616f324ec8853ba6c6297c",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://a218ecb0328b0f92952dc3fca950c7f39a17546d4b82afd597452204e0242302",
				"dweb:/ipfs/QmV1nHgTLXZRj3KLVQtniruS1BR9sACkDv5UZoKrARWoEJ"
			]
		},
		"contracts2/flashloan-lib/IFlashLoanSimpleReceiver.sol": {
			"keccak256": "0x72ff40d4b0e4aeac3aed3dbaf718ea0315244ae0b1c6ac678c2f7c9194ae6911",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://7519a04cb8543bba62a5e59c88db9bf687f483f1d11852b6b8d1482e836f71e9",
				"dweb:/ipfs/QmZwBU321rFJC9tyQYH9d9mkA5cAZLceL9Hf9WA3fNrryT"
			]
		},
		"contracts2/flashloan-lib/IPool.sol": {
			"keccak256": "0x8bd9efeee8991c70c10f95b53a674b254eaf7528704d07bbd29fe31a1ff2c89d",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://6cd0e77a2c55ce5ccc073086f7a199b4dd4462864a5567d72131a8965230bcf0",
				"dweb:/ipfs/QmbGgvpRv3uGhCFiB62Xsh4VV5vBSJvkvHGiYfzqrg6tsW"
			]
		},
		"contracts2/flashloan-lib/IPoolAddressesProvider.sol": {
			"keccak256": "0x8c6fd0117354f3143b52dd2355aa7ab69d5cbaed2651ce93d38dcd0bfbe88e88",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://a6fee03280bd49405653d87680b102883305438b8a6a311c2f0f7d6cefdeabaf",
				"dweb:/ipfs/QmThEiNUV5B67neYnJ7ZsL3BmdPo2SWvyUbUqtJCuMAJb2"
			]
		},
		"contracts2/flashloan-lib/libdatatype.sol": {
			"keccak256": "0x88756c959f534329611e1547d79fa5a38704dfe696d335defaedaaad1d457399",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://0de41383571b315eb6200b887fee40e541cee5c92dae4475761cd0c3713b3d6d",
				"dweb:/ipfs/QmWg9acahbAtFStkmXnpuVsQvDoe6cjC8abZtt3YjFx9m8"
			]
		}
	},
	"version": 1
}